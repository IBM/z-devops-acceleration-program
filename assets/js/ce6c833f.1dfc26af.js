"use strict";(self.webpackChunkdap_docs=self.webpackChunkdap_docs||[]).push([[2852],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),m=p(a),d=i,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return a?n.createElement(h,o(o({ref:t},u),{},{components:a})):n.createElement(h,o({ref:t},u))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,o=new Array(l);o[0]=d;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[m]="string"==typeof e?e:i,o[1]=r;for(var p=2;p<l;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8042:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>r,toc:()=>p});var n=a(7462),i=(a(7294),a(3905));const l={},o="Understanding the journey to a CI/CD pipeline",r={unversionedId:"journey-to-cicd",id:"journey-to-cicd",title:"Understanding the journey to a CI/CD pipeline",description:"What is involved in the DevOps adoption effort from green screen to CI/CD?",source:"@site/docs/journey-to-cicd.md",sourceDirName:".",slug:"/journey-to-cicd",permalink:"/z-devops-acceleration-program/docs/journey-to-cicd",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Pipeline orchestrator",permalink:"/z-devops-acceleration-program/docs/pipeline-orchestrator"},next:{title:"Installing and configuring your tools",permalink:"/z-devops-acceleration-program/docs/install-configure"}},s={},p=[{value:"DevOps transformation approaches",id:"devops-transformation-approaches",level:2},{value:"Roles",id:"roles",level:2},{value:"Architect",id:"architect",level:3},{value:"Build specialist",id:"build-specialist",level:3},{value:"Pipeline specialist",id:"pipeline-specialist",level:3},{value:"Change transformation specialist",id:"change-transformation-specialist",level:3},{value:"Deployment specialist",id:"deployment-specialist",level:3},{value:"Integrated development environment specialist",id:"integrated-development-environment-specialist",level:3},{value:"Middleware specialist",id:"middleware-specialist",level:3},{value:"Migration specialist",id:"migration-specialist",level:3},{value:"Testing specialist",id:"testing-specialist",level:3},{value:"Transformation journey milestones",id:"transformation-journey-milestones",level:2}],u={toc:p},m="wrapper";function c(e){let{components:t,...l}=e;return(0,i.kt)(m,(0,n.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"understanding-the-journey-to-a-cicd-pipeline"},"Understanding the journey to a CI/CD pipeline"),(0,i.kt)("p",null,"What is involved in the DevOps adoption effort from green screen to CI/CD?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Have the right tools (CI/CD pipeline tools): The major components are summarized in the ",(0,i.kt)("a",{parentName:"li",href:"/z-devops-acceleration-program/docs/intro-cicd-zos#components-of-a-ci-cd-pipeline-for-z-os-applications"},"CI/CD for z/OS applications page"),"."),(0,i.kt)("li",{parentName:"ul"},"Have the right people (Roles): The DevOps transformation journey includes a range of roles to help accomplish the various milestones along the way. For example, the enterprise will need roles to architect the CI/CD pipeline and workflows, implement the infrastructure, understand how to use the CI/CD tools, and so on. You can read more about each role in the ",(0,i.kt)("a",{parentName:"li",href:"#roles"},"Roles")," section.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"IBM and business partners can also help support you through various milestones of your journey to the CI/CD pipeline. Available resources are described for each milestone in the ",(0,i.kt)("a",{parentName:"li",href:"#transformation-journey-milestones"},"Transformation journey milestones")," section."))),(0,i.kt)("li",{parentName:"ul"},"Have the right mindset: Migrating from legacy tooling and development processes to DevOps and CI/CD often requires work to bring about cultural change in the organization. In fact, many successful DevOps adoption efforts involve a change transformation specialist to help the teams impacted by this initiative understand the concepts and workflows behind the DevOps change and the benefits they bring.")),(0,i.kt)("h2",{id:"devops-transformation-approaches"},"DevOps transformation approaches"),(0,i.kt)("p",null,'The adoption of a Git-based CI/CD pipeline can be approached in a couple different ways. A "big-bang" approach involves designing and implementing the future state, migrating code from z/OS to the Git provider, and training all the developers on the new way of working while the legacy system is still in place and active. Then, at a given conversion date, all developers will switch to using the new CI/CD pipeline, with the caveats that they will have received training in a short timeframe and that the pipeline will support all workflows from day one.'),(0,i.kt)("p",null,'However, many enterprises prefer a "phased" adoption approach, with the iterative migration of applications from the legacy system to the new CI/CD pipeline. This approach begins by designing the future state, and then training and migrating just one (or a couple) complete application team(s) at a time to the new CI/CD pipeline. Additional applications are subsequently onboarded to the new CI/CD pipeline over several iterations. This iterative process allows the organization to find and iron out wrinkles in the migration process and/or pipeline on a smaller scale, and then apply the experience and improve for later iterations. By the time the enterprise is mostly using the CI/CD pipeline, the migration process will be more familiar, and the switch from the legacy system to the modern CI/CD pipeline becomes much less disruptive. Application dependencies across the new CI/CD pipeline and the legacy system are expected during the iterative adoption process, but the IBM Z DevOps Acceleration Team (DAT) can provide resources that help you establish processes to address this period of co-existence.'),(0,i.kt)("h2",{id:"roles"},"Roles"),(0,i.kt)("p",null,"Having a team with the right skills and mindset is critical to a successful DevOps transformation effort. While the following roles each have their own specific skillsets and tasks, an individual can perform more than one role if it makes sense for their team and organization. You can click on each role to learn about it."),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",{id:"architect"},"Architect"),(0,i.kt)("p",null,"  The architect helps define the new software delivery process.")),(0,i.kt)("p",null,"  Generally, the architect will be someone with strong z/OS skills who understands the infrastructure and current build processes. This deep background knowledge about the current z/OS infrastructure state and mainframe application build processes is important for understanding how to translate those processes into the more modern DevOps pipeline."),(0,i.kt)("p",null,"  A key task is to condense existing mainframe workflows and design the to-be state in the CI/CD pipeline. For this, the architect collaborates with the distributed teams to create common enterprise software delivery processes. Additionally, the architect is involved in defining necessary integration points of the pipeline, as well as designing the migration process."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Background skills and knowledge:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Strong z/OS skills (average of about 10 years of experience)"),(0,i.kt)("li",{parentName:"ul"},"Knowledge about mainframe development processes and workflows"))),(0,i.kt)("li",{parentName:"ul"},"Skills and concepts to learn:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"CI/CD and DevOps principles"),(0,i.kt)("li",{parentName:"ul"},"Git concepts and architecture"))),(0,i.kt)("li",{parentName:"ul"},"Tasks:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Collaborate between the mainframe development team(s) and distributed teams to transform the existing mainframe workflows into the to-be CI/CD pipeline"))),(0,i.kt)("li",{parentName:"ul"},"Job positions that you might find filling this role:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Enterprise architect"),(0,i.kt)("li",{parentName:"ul"},"Enterprise application architect"),(0,i.kt)("li",{parentName:"ul"},"IT architect"))))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",{id:"build-specialist"},"Build specialist"),(0,i.kt)("p",null,"  The build specialist develops and maintains the build scripts for the new pipeline.")),(0,i.kt)("p",null,"  This is a developer type of role that focuses on turning the source code into a deployable artifact, so familiarity with z/OS build processes is required. The build specialist might adapt a distributed example of build scripting to z/OS."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Background skills and knowledge:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Mainframe build fundamentals (for example, JCL/REXX, understanding of compile/link/bind options, and so on)"))),(0,i.kt)("li",{parentName:"ul"},"Skills and concepts to learn:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Git concepts"),(0,i.kt)("li",{parentName:"ul"},"IBM Dependency Based Build (DBB) architecture (for example, dependency management and build results)"),(0,i.kt)("li",{parentName:"ul"},"Groovy scripting"))),(0,i.kt)("li",{parentName:"ul"},"Tasks:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Plan and perform migrations"),(0,i.kt)("li",{parentName:"ul"},"Develop and maintain the customized build framework"))),(0,i.kt)("li",{parentName:"ul"},"Job positions that might fill this role:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Build engineer"),(0,i.kt)("li",{parentName:"ul"},"z/OS build administrator"))))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",{id:"pipeline-specialist"},"Pipeline specialist"),(0,i.kt)("p",null,"  The pipeline specialist assembles and administers the pipeline via the CI/CD orchestrator.")),(0,i.kt)("p",null,"  This is a developer type of role that focuses on building, scaling, and maintaining the CI/CD pipeline structure. The pipeline specialist does not need to be as z/OS-aligned as the build specialist. Rather than being concerned with building COBOL programs (or other z/OS languages), the pipeline specialist is more concerned about integrating tools together. This role often already exists in the distributed side of the enterprise."),(0,i.kt)("p",null,"  Typically, the pipeline specialist is the first role to adopt the DevOps tooling, and then teaches the tools and workflows to other teams in the organization (for example, z/OS application development teams)."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Background skills and knowledge:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"CI/CD specialist"),(0,i.kt)("li",{parentName:"ul"},"Git concepts"),(0,i.kt)("li",{parentName:"ul"},"Change management integrations"))),(0,i.kt)("li",{parentName:"ul"},"Skills and concepts to learn:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Foundational IBM DBB concepts"),(0,i.kt)("li",{parentName:"ul"},"Groovy, Shell scripting"))),(0,i.kt)("li",{parentName:"ul"},"Tasks:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Develop and maintain customized integration scripts between the different pipeline building blocks (for example, using Groovy and Shell scripting)"))),(0,i.kt)("li",{parentName:"ul"},"Job positions that might fill this role:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"DevOps engineer"),(0,i.kt)("li",{parentName:"ul"},"DevOps pipeline administrator"),(0,i.kt)("li",{parentName:"ul"},"DevOps team"))))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",{id:"change-transformation-specialist"},"Change transformation specialist"),(0,i.kt)("p",null,"  The change transformation specialist drives the cultural and organizational change required for a successful modernization journey.")),(0,i.kt)("p",null,"  This role is more of a consulting and people-focused role rather than a technical one. Enterprises sometimes hire an individual specifically for this role when embarking on the DevOps transformation journey - for example, someone with specialized training in coaching DevOps/Agile methodologies, who has experience in helping teams make the transformation succeed from a cultural and cross-team point of view."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Background skills and knowledge:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Strong communication"),(0,i.kt)("li",{parentName:"ul"},"Planning and organizing"),(0,i.kt)("li",{parentName:"ul"},"Change transformation"),(0,i.kt)("li",{parentName:"ul"},"Understanding of DevOps and Agile concepts"))),(0,i.kt)("li",{parentName:"ul"},"Skills and concepts to learn:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'Understand the needs and concerns of all groups, in order to be the "voice of the transformation"'))),(0,i.kt)("li",{parentName:"ul"},"Tasks:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Effectively communicate to teams the motivation and purpose behind the transformation journey"),(0,i.kt)("li",{parentName:"ul"},"Collaborate with teams to coordinate training for the cultural and organizational change"))),(0,i.kt)("li",{parentName:"ul"},"Job positions that might fill this role:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Change transformation specialist"),(0,i.kt)("li",{parentName:"ul"},"DevOps/Agile coach"),(0,i.kt)("li",{parentName:"ul"},"Transformation enablement team"))))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",{id:"deployment-specialist"},"Deployment specialist"),(0,i.kt)("p",null,"  The application deployment specialist implements the deployment solution.")),(0,i.kt)("p",null,"  This developer type of role may be part of the DevOps team (with the pipeline specialist), and might already be using a deployment manager with distributed teams. It is helpful for them to have some understanding of the mainframe subsystem and infrastructure interfaces, as those will also be involved in the z/OS application deployment processes."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Background skills and knowledge:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Deployment management"),(0,i.kt)("li",{parentName:"ul"},"Git concepts"))),(0,i.kt)("li",{parentName:"ul"},"Skills and concepts to learn:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Mainframe subsystem and infrastructure interfaces"))),(0,i.kt)("li",{parentName:"ul"},"Tasks:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Develop and maintain central deployment processes"),(0,i.kt)("li",{parentName:"ul"},"Collaborate with the build specialist and pipeline specialist to design the to-be solution"))),(0,i.kt)("li",{parentName:"ul"},"Job positions that might fill this role:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"DevOps engineer"),(0,i.kt)("li",{parentName:"ul"},"DevOps team"))))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",{id:"integrated-development-environment-specialist"},"Integrated development environment specialist"),(0,i.kt)("p",null,"  The integrated development environment (IDE) specialist is a developer type of role that helps implement the workflows within the IDE.")),(0,i.kt)("p",null,"  Since the IDE is a central tool used by application developers, it is important that someone in the organization is trained on how to use the IDE effectively, and can also guide others on using it. The IDE specialist understands (or learns) how to use the IDE, and shares this knowledge with others in their organization."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Background skills and knowledge:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Software development tasks and use cases"))),(0,i.kt)("li",{parentName:"ul"},"Skills and concepts to learn (if not already acquired):",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"IDE customization"),(0,i.kt)("li",{parentName:"ul"},"Git concepts"))),(0,i.kt)("li",{parentName:"ul"},"Tasks:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Customization and documentation of the IDE"),(0,i.kt)("li",{parentName:"ul"},"IDE installation and deployment to developer workstations (including upgrades)"),(0,i.kt)("li",{parentName:"ul"},"Training and coaching others on using the IDE"))),(0,i.kt)("li",{parentName:"ul"},"Job positions that might fill this role:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Software developer (or application developer)"),(0,i.kt)("li",{parentName:"ul"},"Software engineer"))))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",{id:"middleware-specialist"},"Middleware specialist"),(0,i.kt)("p",null,"  The middleware specialist role is an umbrella term that covers different technical roles that help install and configure the tools for the CI/CD pipeline.")),(0,i.kt)("p",null,"  This role might be handled by more than one individual, as it can cover setup tasks on both Linux and mainframe environments, depending on the enterprise's needs."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Background skills and knowledge:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Background in managing or administering the requisite middleware system"))),(0,i.kt)("li",{parentName:"ul"},"Skills and concepts to learn (if not already acquired):",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Initial install and configure steps for DevOps tooling"))),(0,i.kt)("li",{parentName:"ul"},"Tasks:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Assist with installation and configuration of Linux-based components and/or z/OS host components (depending on selected DevOps technology stack)"))),(0,i.kt)("li",{parentName:"ul"},"Job positions that might fill this role:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Middleware system programmer or system administrator (for example, CICS administrator and/or Db2 administrator)"),(0,i.kt)("li",{parentName:"ul"},"Infrastructure team"))))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",{id:"migration-specialist"},"Migration specialist"),(0,i.kt)("p",null,"  The migration specialist is typically a transitional role that focuses on facilitating the migration from the legacy development tools and processes to the modern CI/CD pipeline.")),(0,i.kt)("p",null,"  This role can either be handled by a selected team in the enterprise, or by a business partner."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Background skills and knowledge:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Mainframe data fundamentals"),(0,i.kt)("li",{parentName:"ul"},"Understanding of the legacy development system"))),(0,i.kt)("li",{parentName:"ul"},"Skills and concepts to learn (if not already acquired):",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Git concepts"),(0,i.kt)("li",{parentName:"ul"},"IBM Dependency Based Build fundamentals (for example, ",(0,i.kt)("a",{parentName:"li",href:"/z-devops-acceleration-program/docs/dbb-migration-tool"},"DBB Migration Tool"),")"))),(0,i.kt)("li",{parentName:"ul"},"Tasks:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Help move data from legacy z/OS application development systems to Git"))),(0,i.kt)("li",{parentName:"ul"},"Job positions that might fill this role:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"DevOps implementation architect"),(0,i.kt)("li",{parentName:"ul"},"Build engineer and DevOps team"))))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",{id:"testing-specialist"},"Testing specialist"),(0,i.kt)("p",null,"  The testing specialist is technical role that focuses on quality assurance in the software.")),(0,i.kt)("p",null,"  While testing in legacy development workflows is often manual and time consuming, the move to a modernized DevOps toolchain allows the testing specialist to create tests that can be automatically run by the developer, and/or as part of a CI/CD pipeline. The scope of these tests can range from individual unit tests to larger-scale integration tests on dedicated testing platforms."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Background skills and knowledge:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Understanding of the z/OS application functionality and use cases"),(0,i.kt)("li",{parentName:"ul"},"Experience testing z/OS applications"))),(0,i.kt)("li",{parentName:"ul"},"Skills and concepts to learn (if not already acquired):",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Git concepts"),(0,i.kt)("li",{parentName:"ul"},"IBM Dependency Based Build fundamentals (for example, running a DBB User Build)"),(0,i.kt)("li",{parentName:"ul"},"Modern z/OS testing tools such as zUnit, IBM Virtual Dev and Test for z/OS (ZVDT), and/or IBM Z Virtual Test Platform (VTP)"))),(0,i.kt)("li",{parentName:"ul"},"Tasks:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Create and automate testing processes for the CI/CD pipeline (for example, unit and/or integration testing)"))),(0,i.kt)("li",{parentName:"ul"},"Job positions that might fill this role:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Quality engineer"),(0,i.kt)("li",{parentName:"ul"},"Quality assurance team"),(0,i.kt)("li",{parentName:"ul"},"Testing team"))))),(0,i.kt)("h2",{id:"transformation-journey-milestones"},"Transformation journey milestones"),(0,i.kt)("p",null,'As you migrate from the green screen and adopt CI/CD, there are several key milestones along the way. The following blueprint is a high-level overview of the milestones in a CI/CD journey. If you would like a deep dive session on this blueprint, please reach out to us via the "Contact us" link at the bottom of this page. IBM teams and business partners are available to help you at each step of the way:'),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Milestones in the journey to a CI/CD pipeline",src:a(5530).Z,width:"1425",height:"463"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Milestone 1: Discover, learn, & assess to define the transformation strategy"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This is where you learn about and validate the pipeline approach. IBM conducts a no-charge Value Stream Assessment (VSA) that leverages IBM Design Thinking principles in order to capture your requirements. It involves sketching out a high-level design of the to-be future state, and understanding the technical composition of the pipeline. In this milestone, building a proof-of-concept (POC) will help further validate the approach and build up skills, either to implement the pipeline with in-house resources or to be able to make informed decisions together with a services delivery organization. The POC will also help prove the benefits of the new approach and establish support from technical champions and management/leadership, which is key for a successful DevOps transformation."),(0,i.kt)("li",{parentName:"ul"},"Milestone 1 resources:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"At the start of Milestone 1, free online resources and training provided by IBM can help you explore the IBM Z DevOps solution."),(0,i.kt)("li",{parentName:"ul"},"Engage with the IBM Sales and Tech Sales team to learn more about how the IBM Z DevOps solution can benefit your enterprise."),(0,i.kt)("li",{parentName:"ul"},"When your team is ready to conduct a POC, the DAT can help with additional training and design sessions, and will include a primer on how to analyze your current application as well as provide enablement on the new way of working."))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Milestone 2: Prepare & plan for transformation"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"This milestone is about understanding your system's current state. Your system has evolved over time, perhaps over decades. Therefore, it requires a detailed assessment of the current build setup, the current repository layouts, and how ownership of code is defined. By assessing and understanding your system's current state, you can clarify the designs for your future state, as well as the steps for how to get there. This is also when you will want to consider the best way for your organization to adopt the new CI/CD pipeline, whether that would be to take a phased migration approach (which most customers do) or a big-bang approach."),(0,i.kt)("p",{parentName:"li"},"Additional important activities in Milestone 2 include developing a migration strategy based on application types (for example, all COBOL-only applications), expanding the POC efforts with a pilot application using a subset of your own application code, and defining the target architecture and branching model that your organization will follow. The ultimate objective in this phase is to validate the business value and obtain approval and budget to proceed with the transformation project.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Milestone 2 resources: The following IBM teams and business partners can help with analysis and refinement, leading to a proposal to move off of the legacy library manager:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The IBM Z DevOps Acceleration Program (which contains the DAT) can help you conduct a pilot for further evaluation of the IBM Z DevOps solution with a subset of your own application code."),(0,i.kt)("li",{parentName:"ul"},"IBM services such as the Software Migration Project Office (SMPO), Expert Labs, or IBM Consulting"),(0,i.kt)("li",{parentName:"ul"},"IBM business partners"),(0,i.kt)("li",{parentName:"ul"},"Global Systems Integrators"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Milestone 3: Architect & implement the future state"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'Milestone 3 starts with implementation (installation/configuration) of the production-level toolchain. It also gets into the details of the solution by refining designs and ideas from the previous milestones to create a low-level design of the future workflow. This includes planning the timing of different parts of the DevOps transformation journey to prioritize core pieces. If the design for the pipeline is in a stable state, then the necessary pipeline pieces can go forward with implementation. This is when the "heavy lifting" and "plumbing" work for the pipeline begins, integrating the different CI/CD components together in the context of your selected technologies (for example, implementation of the modern IDE, build scripts, pipeline definitions, and deployment automation).'),(0,i.kt)("p",{parentName:"li"},"In Milestone 3, it is also important to communicate the DevOps transformation journey to the intended users of the new CI/CD pipeline. This can include demos, training, and provisioning of sandbox systems where the users can explore hands-on the future state. Other important activities are identifying education requirements and defining and publishing a rollout plan.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Milestone 3 resources:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Build framework samples for zAppBuild can be found in zAppBuild's ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/IBM/dbb-zappbuild/tree/main/docs"},"GitHub documentation"),"."),(0,i.kt)("li",{parentName:"ul"},"First-class implementation support and guidance are available from IBM services (SMPO, Expert Labs, IBM Consulting), IBM business partners, and Global Systems Integrators."))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Milestone 4: Begin rolling out new ways of working"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'In Milestone 4, the plan is put into action. This means the chosen application development and operation teams are trained and onboarded with the new way of working, and via migration plan, the core DevOps team begins to move applications of a particular type from the legacy system to the new CI/CD pipeline. This should be done in an iterative way (that is, a phased migration approach), allowing the organization to continuously incorporate feedback for improving the solution and migration process. This is also when DevOps coaches and technology Subject Matter Experts (SMEs) can be engaged to educate the development and operations staff. By the end of this milestone, a CI/CD pipeline is in place, active, and considered to be "in production".'),(0,i.kt)("li",{parentName:"ul"},"Milestone 4 resources:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Launch the new pipeline and make the change stick using IBM services (SMPO, Expert Labs, IBM Consulting), IBM business partners, and Global Systems Integrators."))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Milestone 5: Migrate remaining applications & roll out to all teams"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Milestone 5 continues to educate and move the remaining application teams to the new pipeline and wraps up the migration part of the DevOps transformation journey, with teams now adopting a new way of working. If needed, Milestones 3 through 5 can be repeated for other application types (for example, all PL/I applications or all Assembler applications or another set of more complex applications). After all the application teams are moved to the new CI/CD pipeline, independent software vendor (ISV) licenses can be returned, and the organization can continue to improve developer productivity by enabling new capabilities and optimizing the DevOps workflow in the pipeline."),(0,i.kt)("li",{parentName:"ul"},"Milestone 5 resources:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'"Rinse and repeat" by moving the remaining applications and continuously enhance the pipeline using IBM services (SMPO, Expert Labs, IBM Consulting), IBM business partners, and Global Systems Integrators.')))))))}c.isMDXComponent=!0},5530:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/devops-transformation-milestones-simple-70efa5441fd466c16ba4eb238a364fc0.png"}}]);