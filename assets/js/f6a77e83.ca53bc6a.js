"use strict";(self.webpackChunkdap_docs=self.webpackChunkdap_docs||[]).push([[6642],{320:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>s,default:()=>g,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var n=t(7624),o=t(2172);const r={title:'A "no-baggage" approach to new Mainframe development practices',slug:"2023-11-22-no-baggage",authors:[{name:"Mathieu Dalbin"}],tags:["transformation","adoption"],hide_table_of_contents:!1,hide_reading_time:!0},s=void 0,i={permalink:"/z-devops-acceleration-program/news/2023-11-22-no-baggage",source:"@site/news/2023-11-22-no-baggage.md",title:'A "no-baggage" approach to new Mainframe development practices',description:'Transitioning a whole delivery process for applications to a new set of tools and practices can represent a real challenge if the attempt is to reproduce design from the past and keep things as they were as close as possible. A "no-baggage" strategy means read more...',date:"2023-11-22T00:00:00.000Z",formattedDate:"November 22, 2023",tags:[{label:"transformation",permalink:"/z-devops-acceleration-program/news/tags/transformation"},{label:"adoption",permalink:"/z-devops-acceleration-program/news/tags/adoption"}],hasTruncateMarker:!1,authors:[{name:"Mathieu Dalbin"}],frontMatter:{title:'A "no-baggage" approach to new Mainframe development practices',slug:"2023-11-22-no-baggage",authors:[{name:"Mathieu Dalbin"}],tags:["transformation","adoption"],hide_table_of_contents:!1,hide_reading_time:!0},unlisted:!1,prevItem:{title:"Welcome to the IBM Z DevOps Acceleration Program News",permalink:"/z-devops-acceleration-program/news/2023-11-28-opening-post"},nextItem:{title:"Transformation of library manager SysProgs into DevOps Engineers",permalink:"/z-devops-acceleration-program/news/2023-06-09-sysprog-to-devops-eng"}},p={authorsImageUrls:[void 0]},c=[];function l(e){const a={a:"a",p:"p",...(0,o.M)(),...e.components};return(0,n.jsxs)(a.p,{children:['Transitioning a whole delivery process for applications to a new set of tools and practices can represent a real challenge if the attempt is to reproduce design from the past and keep things as they were as close as possible. A "no-baggage" strategy means ',(0,n.jsx)(a.a,{href:"https://community.ibm.com/community/user/ibmz-and-linuxone/blogs/mathieu-dalbin/2024/02/09/a-no-baggage-approach-to-new-mainframe-development",children:"read more..."})]})}function g(e={}){const{wrapper:a}={...(0,o.M)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},2172:(e,a,t)=>{t.d(a,{I:()=>i,M:()=>s});var n=t(1504);const o={},r=n.createContext(o);function s(e){const a=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(r.Provider,{value:a},e.children)}}}]);