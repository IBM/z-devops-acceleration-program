"use strict";(self.webpackChunkdap_docs=self.webpackChunkdap_docs||[]).push([[6400],{8580:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=t(7624),o=t(2172);const s={},r="Tutorials",a={id:"tutorial",title:"Tutorials",description:"IBM Z Systems software trials (IBM Z Trial)",source:"@site/docs/tutorial.md",sourceDirName:".",slug:"/tutorial",permalink:"/z-devops-acceleration-program/docs/tutorial",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Installing and configuring your tools",permalink:"/z-devops-acceleration-program/docs/install-configure"},next:{title:"Courses",permalink:"/z-devops-acceleration-program/docs/courses"}},l={},c=[{value:"IBM Z Systems software trials (IBM Z Trial)",id:"ibm-z-systems-software-trials-ibm-z-trial",level:2},{value:"CI/CD pipeline tutorials",id:"cicd-pipeline-tutorials",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"tutorials",children:"Tutorials"}),"\n",(0,i.jsx)(n.h2,{id:"ibm-z-systems-software-trials-ibm-z-trial",children:"IBM Z Systems software trials (IBM Z Trial)"}),"\n",(0,i.jsxs)(n.p,{children:["If you are new to DevOps for z/OS applications, you might want to explore the workflow and tooling without having to first install and configure an entire technology stack on your own environment. ",(0,i.jsx)(n.a,{href:"https://early-access.ibm.com/software/support/trial/cst/welcomepage.wss?siteId=1135&tabId=2999&w=1",children:"IBM Z Systems software trials"})," (also known as IBM Z Trial) allows you to try out a variety of IBM Z software experiences in a provisioned environment for free, meaning you can get right to learning how to use these tools/technologies. The following IBM Z Trial experiences are particularly relevant to DevOps and CI/CD pipelines for z/OS applications:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://early-access.ibm.com/software/support/trial/cst/welcomepage.wss?siteId=1276&tabId=3408&w=1&_ga=2.123728267.1414838256.1678278450-1117488342.1671618084",children:"Bring Your Own (BYO) IDE for Cloud Native Development"})}),": Explore the integrated development environment (IDE) functionality in the Eclipse-based IBM Developer for z/OS\xae (IDz) and/or Microsoft\xae VS Code\u2122 with IBM Z extensions, and learn how these capabilities fit into the DevOps workflow with other tools such as Git, DBB, and Jenkins."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://early-access.ibm.com/software/support/trial/cst/welcomepage.wss?siteId=1206&tabId=3186&w=1",children:"IBM Application Delivery Foundation for z/OS\xae"})}),": Explore the range of features in the IBM Application Delivery Foundation for z/OS (ADFz) suite of integrated tooling that can help you analyze, understand, debug, and modify your COBOL programs."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Further reading"}),": ",(0,i.jsx)(n.a,{href:"https://ibm.github.io/mainframe-downloads/Training/adfz-learning-resources.html",children:"ADFz Resources"})," contains links to standalone enablement resources for ADFz, IDz, and IBM Z DevOps including videos, blog links, new release announcements, PDFs, and other deep-dive learning content."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"cicd-pipeline-tutorials",children:"CI/CD pipeline tutorials"}),"\n",(0,i.jsx)(n.p,{children:"Once you have the prerequisite DevOps tools installed on your environment, you can follow CI/CD pipeline tutorial(s) that cover your selected technologies."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note:"})," Some tutorials might use older product versions, but are included on this list because the information is still useful reference material."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://developer.ibm.com/tutorials/build-a-pipeline-with-gitlab-ci-dbb-and-ucd/",children:"Build a pipeline with GitLab CI, IBM Dependency Based Build, and IBM UrbanCode Deploy"})}),": Learn how to configure GitLab CI for a CI/CD pipeline that includes builds with IBM Dependency Based Build (DBB), packaging and deploy phases with IBM UrbanCode Deploy (UCD), automated unit testing with the ZUnit feature of IBM Developer for z/OS (IDz), and code coverage and code review with IDz."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://developer.ibm.com/tutorials/build-a-pipeline-with-jenkins-dependency-based-build-and-urbancode-deploy/",children:"Build a pipeline with Jenkins, Dependency Based Build, and UrbanCode Deploy"})}),": Learn how to configure UrbanCode Deploy (UCD) and Jenkins to build a pipeline that uses DBB and Artifactory to streamline the development of applications up through the deployment phase. This tutorial also covers how to include automated unit testing, code coverage, and IBM Developer for z/OS (IDz) code review in the pipeline by using the ZUnit feature of IDz."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["For a deeper dive on specific IBM tools and technology stacks, check out our ",(0,i.jsx)(n.a,{href:"/z-devops-acceleration-program/docs/courses",children:"Courses"})," page."]})]})}function p(e={}){const{wrapper:n}={...(0,o.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},2172:(e,n,t)=>{t.d(n,{I:()=>a,M:()=>r});var i=t(1504);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);