"use strict";(self.webpackChunkdap_docs=self.webpackChunkdap_docs||[]).push([[115],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(r),f=a,u=m["".concat(p,".").concat(f)]||m[f]||g[f]||o;return r?n.createElement(u,i(i({ref:t},l),{},{components:r})):n.createElement(u,i({ref:t},l))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4792:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={title:'A "no-baggage" approach to new Mainframe development practices',slug:"2023-11-22-no-baggage",authors:[{name:"Mathieu Dalbin"}],tags:["transformation","adoption"],hide_table_of_contents:!1,hide_reading_time:!0},i=void 0,s={permalink:"/z-devops-acceleration-program/news/2023-11-22-no-baggage",source:"@site/news/2023-11-22-no-baggage.md",title:'A "no-baggage" approach to new Mainframe development practices',description:'Transitioning a whole delivery process for applications to a new set of tools and practices can represent a real challenge if the attempt is to reproduce design from the past and keep things as they were as close as possible. A "no-baggage" strategy means read more...',date:"2023-11-22T00:00:00.000Z",formattedDate:"November 22, 2023",tags:[{label:"transformation",permalink:"/z-devops-acceleration-program/news/tags/transformation"},{label:"adoption",permalink:"/z-devops-acceleration-program/news/tags/adoption"}],hasTruncateMarker:!1,authors:[{name:"Mathieu Dalbin"}],frontMatter:{title:'A "no-baggage" approach to new Mainframe development practices',slug:"2023-11-22-no-baggage",authors:[{name:"Mathieu Dalbin"}],tags:["transformation","adoption"],hide_table_of_contents:!1,hide_reading_time:!0},prevItem:{title:"Welcome to the IBM Z DevOps Acceleration Program News",permalink:"/z-devops-acceleration-program/news/2023-11-28-opening-post"},nextItem:{title:"Transformation of library manager SysProgs into DevOps Engineers",permalink:"/z-devops-acceleration-program/news/2023-06-09-sysprog-to-devops-eng"}},p={authorsImageUrls:[void 0]},c=[],l={toc:c},m="wrapper";function g(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,'Transitioning a whole delivery process for applications to a new set of tools and practices can represent a real challenge if the attempt is to reproduce design from the past and keep things as they were as close as possible. A "no-baggage" strategy means ',(0,a.kt)("a",{parentName:"p",href:"https://community.ibm.com/community/user/ibmz-and-linuxone/blogs/mathieu-dalbin/2023/11/22/a-no-baggage-approach-to-new-mainframe-development"},"read more...")))}g.isMDXComponent=!0}}]);