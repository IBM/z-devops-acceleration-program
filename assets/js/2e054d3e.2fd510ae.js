"use strict";(self.webpackChunkdap_docs=self.webpackChunkdap_docs||[]).push([[769],{3905:(e,t,i)=>{i.d(t,{Zo:()=>u,kt:()=>h});var a=i(7294);function o(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function n(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){o(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,a,o=function(e,t){if(null==e)return{};var i,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||(o[i]=e[i]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var p=a.createContext({}),s=function(e){var t=a.useContext(p),i=t;return e&&(i="function"==typeof e?e(t):n(n({},t),e)),i},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var i=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(i),m=o,h=d["".concat(p,".").concat(m)]||d[m]||c[m]||r;return i?a.createElement(h,n(n({ref:t},u),{},{components:i})):a.createElement(h,n({ref:t},u))}));function h(e,t){var i=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=i.length,n=new Array(r);n[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:o,n[1]=l;for(var s=2;s<r;s++)n[s]=i[s];return a.createElement.apply(null,n)}return a.createElement.apply(null,i)}m.displayName="MDXCreateElement"},733:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>G,contentTitle:()=>D,default:()=>E,frontMatter:()=>I,metadata:()=>S,toc:()=>O});var a=i(7462),o=i(7294),r=i(3905),n=i(6010),l=i(2466),p=i(6550),s=i(1980),u=i(7392),d=i(12);function c(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:i,attributes:a,default:o}}=e;return{value:t,label:i,attributes:a,default:o}}))}function m(e){const{values:t,children:i}=e;return(0,o.useMemo)((()=>{const e=t??c(i);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,i])}function h(e){let{value:t,tabValues:i}=e;return i.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:i}=e;const a=(0,p.k6)(),r=function(e){let{queryString:t=!1,groupId:i}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:t,groupId:i});return[(0,s._X)(r),(0,o.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function b(e){const{defaultValue:t,queryString:i=!1,groupId:a}=e,r=m(e),[n,l]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=i.find((e=>e.default))??i[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[p,s]=f({queryString:i,groupId:a}),[u,c]=function(e){let{groupId:t}=e;const i=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,d.Nk)(i);return[a,(0,o.useCallback)((e=>{i&&r.set(e)}),[i,r])]}({groupId:a}),b=(()=>{const e=p??u;return h({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{b&&l(b)}),[b]);return{selectedValue:n,selectValue:(0,o.useCallback)((e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),s(e),c(e)}),[s,c,r]),tabValues:r}}var g=i(2389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:i,selectedValue:r,selectValue:p,tabValues:s}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),c=e=>{const t=e.currentTarget,i=u.indexOf(t),a=s[i].value;a!==r&&(d(t),p(a))},m=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const i=u.indexOf(e.currentTarget)+1;t=u[i]??u[0];break}case"ArrowLeft":{const i=u.indexOf(e.currentTarget)-1;t=u[i]??u[u.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":i},t)},s.map((e=>{let{value:t,label:i,attributes:l}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:c},l,{className:(0,n.Z)("tabs__item",k.tabItem,l?.className,{"tabs__item--active":r===t})}),i??t)})))}function v(e){let{lazy:t,children:i,selectedValue:a}=e;const r=(Array.isArray(i)?i:[i]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=b(e);return o.createElement("div",{className:(0,n.Z)("tabs-container",k.tabList)},o.createElement(y,(0,a.Z)({},e,t)),o.createElement(v,(0,a.Z)({},e,t)))}function N(e){const t=(0,g.Z)();return o.createElement(w,(0,a.Z)({key:String(t)},e))}const z={tabItem:"tabItem_Ymn6"};function B(e){let{children:t,hidden:i,className:a}=e;return o.createElement("div",{role:"tabpanel",className:(0,n.Z)(z.tabItem,a),hidden:i},t)}const I={},D="Installing and configuring your tools",S={unversionedId:"install-configure",id:"install-configure",title:"Installing and configuring your tools",description:"Installation/set-up instructions and links to installation documentation for specific products. Git, DBB, and zAppBuild are required. Generally, most enterprises will pick one technology from each component category, although sometimes more than one IDE option is selected (depending on developer preference).",source:"@site/docs/install-configure.md",sourceDirName:".",slug:"/install-configure",permalink:"/zDevOps-Acceleration/z-devops-acceleration-program/docs/install-configure",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Understanding the journey to a CI/CD pipeline",permalink:"/zDevOps-Acceleration/z-devops-acceleration-program/docs/journey-to-cicd"},next:{title:"Tutorial",permalink:"/zDevOps-Acceleration/z-devops-acceleration-program/docs/tutorial"}},G={},O=[{value:"Integrated development environment",id:"integrated-development-environment",level:2},{value:"IDE options",id:"ide-options",level:3},{value:"Source code management",id:"source-code-management",level:2},{value:"Git provider options",id:"git-provider-options",level:3},{value:"Build",id:"build",level:2},{value:"Making zAppBuild available in your Git provider",id:"making-zappbuild-available-in-your-git-provider",level:3},{value:"Updating your customized version of zAppBuild",id:"updating-your-customized-version-of-zappbuild",level:3},{value:"Artifact repository",id:"artifact-repository",level:2},{value:"Artifact repository options",id:"artifact-repository-options",level:3},{value:"Deployment manager",id:"deployment-manager",level:2},{value:"Deployment manager options",id:"deployment-manager-options",level:3},{value:"Pipeline orchestrator",id:"pipeline-orchestrator",level:2},{value:"Pipeline orchestrator options",id:"pipeline-orchestrator-options",level:3},{value:"Resources",id:"resources",level:2}],A={toc:O},C="wrapper";function E(e){let{components:t,...o}=e;return(0,r.kt)(C,(0,a.Z)({},A,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"installing-and-configuring-your-tools"},"Installing and configuring your tools"),(0,r.kt)("p",null,"Installation/set-up instructions and links to installation documentation for specific products. Git, DBB, and zAppBuild are required. Generally, most enterprises will pick one technology from each component category, although sometimes more than one IDE option is selected (depending on developer preference)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," We have listed common options for each CI/CD component below. However, if you do not see the option your enterprise has selected for a particular component, that does not necessarily mean it cannot be part of your IBM Z DevOps solution. For most tools being used on the distributed side, you can integrate it into the pipeline as long as it is compatible with z/OS application development and brings value to your enterprise."),(0,r.kt)("p",null,"Not sure what tool to pick for certain CI/CD component? See our documentation on ",(0,r.kt)("a",{parentName:"p",href:"/zDevOps-Acceleration/z-devops-acceleration-program/docs/intro-cicd-zos#how-do-you-select-what-tool-to-use-for-each-component"},"How do you select what tool to use for each component"),"."),(0,r.kt)("h2",{id:"integrated-development-environment"},"Integrated development environment"),(0,r.kt)("p",null,"Who needs to install the integrated development environment (IDE), and where?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The integrated development environment (IDE) will need to be installed by z/OS application developers on their local workstations."),(0,r.kt)("li",{parentName:"ul"},"Some IDE options have host components that require a system programmer to configure.")),(0,r.kt)("h3",{id:"ide-options"},"IDE options"),(0,r.kt)(N,{mdxType:"Tabs"},(0,r.kt)(B,{value:"idz",label:"IBM Developer for z/OS",mdxType:"TabItem"},(0,r.kt)("p",null,"  ",(0,r.kt)("a",{parentName:"p",href:"https://www.ibm.com/docs/en/developer-for-zos"},"IBM Developer for z/OS (IDz)"),": Eclipse-based IDE"),(0,r.kt)("p",null,"  Additional useful tools: ",(0,r.kt)("a",{parentName:"p",href:"https://www.ibm.com/support/pages/system/files/inline-files/Setup-Groovy-Development-Environment-in-IDZ_V1.1.2_0.pdf"},"Groovy development environment in IDz"))),(0,r.kt)(B,{value:"vsCode",label:"Wazi for VS Code",mdxType:"TabItem"},(0,r.kt)("p",null,"  ",(0,r.kt)("a",{parentName:"p",href:"https://www.ibm.com/docs/en/cloud-paks/z-modernization-stack/2023.2?topic=code-option-1-developing-wazi-vs"},"Wazi for VS Code"),": Visual Studio Code IDE with IBM Z Open Editor and Debug extensions)")),(0,r.kt)(B,{value:"browserBased",label:"Wazi for Dev Spaces",mdxType:"TabItem"},(0,r.kt)("p",null,"  ",(0,r.kt)("a",{parentName:"p",href:"https://www.ibm.com/docs/en/cloud-paks/z-modernization-stack/2023.2?topic=code-option-2-developing-wazi-dev-spaces"},"Wazi for Dev Spaces"),": Browser-based IDE"),(0,r.kt)("p",null,"  Note: If you are using Wazi Dev Spaces (browser-based IDE), developers will not have to install the IDE."))),(0,r.kt)("h2",{id:"source-code-management"},"Source code management"),(0,r.kt)("p",null,"The IBM Z DevOps solution supports Git as the SCM. Clients can pick from several Git providers, including those listed in the following ",(0,r.kt)("a",{parentName:"p",href:"#git-provider-options"},"Git provider options")," section."),(0,r.kt)("p",null,"Who needs to install the source code management (SCM), and where?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Regardless of the Git provider selected, Git will need to be installed on both developer machines, and on z/OS.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Developer machines: Developers can obtain Git the same way they would in distributed development."),(0,r.kt)("li",{parentName:"ul"},"z/OS: The Rocket distribution of Git is specifically ported for z/OS, and can be installed by a system programmer.")))),(0,r.kt)("p",null,"In addition to installing Git, the Git provider should also be configured. (Usually by the enterprise's team that handles the Git provider for the distributed side will help provide the basic organization or repository setup for the z/OS application team(s), and then the z/OS/DevOps team will maintain these repoistories.)"),(0,r.kt)("h3",{id:"git-provider-options"},"Git provider options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Azure Repos"),(0,r.kt)("li",{parentName:"ul"},"Bitbucket"),(0,r.kt)("li",{parentName:"ul"},"GitHub"),(0,r.kt)("li",{parentName:"ul"},"GitLab")),(0,r.kt)("h2",{id:"build"},"Build"),(0,r.kt)("p",null,"IBM Dependency Based Build (DBB) is the build tool in the IBM Z DevOps solution. This is complemented by the zAppBuild framework, which helps facilitate your build process using DBB APIs. Many clients start by using zAppBuild and enhancing it to their needs, for example by adding new language scripts, or by modifying the existing build processing logic."),(0,r.kt)("p",null,"This section provides a set of instructions for how you can make zAppBuild available in your Git provider and how to synchronize new features of zAppBuild into your customized fork."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," zAppBuild releases new versions through the ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branch. New contributions are added first to the ",(0,r.kt)("inlineCode",{parentName:"p"},"develop")," branch, which then will be reviewed and merged to the ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branch."),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/IBM/dbb"},"IBM DBB samples repository")," contains additional utilities that enhance or integrate with the other DBB build processes."),(0,r.kt)("p",null,"Who needs to install DBB, and where?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"System programmers install DBB toolkit on z/OS.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Set up Db2 for z/OS or Db2 for LUW (Linux, UNIX, and Windows) for the DBB metadata store."),(0,r.kt)("li",{parentName:"ul"},"See IBM Documentation on ",(0,r.kt)("a",{parentName:"li",href:"https://www.ibm.com/docs/en/dbb/2.0?topic=installing-configuring-dbb"},"Installing and configuring DBB"),"."))),(0,r.kt)("li",{parentName:"ul"},"Developers using IDz as their IDE must add the ",(0,r.kt)("a",{parentName:"li",href:"https://www.ibm.com/docs/en/developer-for-zos/16.0?topic=integrating-dependency-based-build-developer-zos"},"DBB integration")," to their installation of IDz in order to use DBB's user build feature.")),(0,r.kt)("p",null,"Who needs to set up zAppBuild (and the IBM DBB samples repository), and where?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The build engineer and/or DevOps team (in ",(0,r.kt)("a",{parentName:"li",href:"/zDevOps-Acceleration/z-devops-acceleration-program/docs/journey-to-cicd#roles"},"DAT roles"),": Build specialist and/or Pipeline specialist) should set this up with the enterprise's Git provider.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Steps for making a copy of the zAppBuild repository available in your enterprise's preferred Git provider are provided in the ",(0,r.kt)("a",{parentName:"li",href:"#making-zappbuild-available-in-your-git-provider"},"following section"),"."),(0,r.kt)("li",{parentName:"ul"},"If the IBM DBB samples repository is needed, it can be copied from its ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/IBM/dbb"},"IBM GitHub page")," to your Git provider in a similar manner to the zAppBuild repository.")))),(0,r.kt)("h3",{id:"making-zappbuild-available-in-your-git-provider"},"Making zAppBuild available in your Git provider"),(0,r.kt)("p",null,"Before you start your customization of zAppBuild, you must first create a clone of IBM's zAppBuild repository and store the clone in your Git provider of choice. This could be any Git provider, such as GitHub, GitLab, Bitbucket or Azure Repos, and so on. If you have done this already, feel free to move to the next section."),(0,r.kt)("p",null,"Here are the steps to make the zAppBuild repository available in a central repository on your Git provider:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"On your local workstation, use your browser and log on to your Git provider. Follow the instructions in your Git provider to create a new repository, which will be the new \u201chome\u201d of your customized version of zAppBuild."),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},'We suggest "dbb-zappbuild" as the new repository/project name, but you can use another name if you prefer.'),(0,r.kt)("li",{parentName:"ol"},"Set the repository's visibility according to your needs."),(0,r.kt)("li",{parentName:"ol"},"Do not initialize the repository yet.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Your Git provider will create the repository, but it is not yet initialized. On most Git providers, the repository creation process will end on a page with information on how to share an existing Git repository. Leave the browser open."))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Clone IBM's public ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/IBM/dbb-zappbuild"},"zAppBuild")," repository to your local workstation. You can use your local workstation's terminal to complete this step (for example, Git Bash in Windows, or Terminal on MacOS)."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"If you are using IBM Developer for z/OS (IDz) as your IDE, you can use its ",(0,r.kt)("a",{parentName:"li",href:"https://www.ibm.com/docs/en/developer-for-zos/16.0?topic=view-running-viewing-commands-using-remote-shell"},"Local Shell"),". Wazi for VS Code and Wazi for Dev Spaces also both have Terminal windows. (We documented the steps in this guide using a terminal.)")),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In the terminal, navigate to the folder where you would like to clone the repository.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Retrieve the Git repository URL or SSH path from IBM's public zAppBuild repository from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/IBM/dbb-zappbuild"},"https://github.com/IBM/dbb-zappbuild"),":"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"Retrieving the Git repository URL from IBM&#39;s public zAppBuild repository",src:i(8494).Z,width:"283",height:"247"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In your terminal, enter the command for cloning the repository. (The following command uses the Git repository URL, but the SSH path can also be used if you have SSH keys set up.):"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/IBM/dbb-zappbuild.git\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Example Git clone command with output in a terminal:"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"Example Git clone command with output in a terminal",src:i(9032).Z,width:"837",height:"140"}))))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Follow the instructions of your Git provider to push the contents of your newly-cloned local repository (from Step 2) to the central repository on your Git provider (created in Step 1). (Note: Exact instructions may vary from Git provider to Git provider.)"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Within the terminal session, execute the following commands to push an existing Git repository:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Replace ",(0,r.kt)("inlineCode",{parentName:"li"},"<existing_repo>")," with the path to your newly-cloned local repository."),(0,r.kt)("li",{parentName:"ul"},"Replace ",(0,r.kt)("inlineCode",{parentName:"li"},"<Your central Git repository>")," with the URL to the new central repository on your Git provider. (For example, with GitLab as the Git provider, the URL might look similar to ",(0,r.kt)("inlineCode",{parentName:"li"},"git@gitlab.dat.ibm.com:DAT/dbb-zappbuild.git"),".)")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cd <existing_repo>\ngit remote rename origin old-origin\ngit remote add origin <Your central Git repository>\ngit push -u origin \u2013all\ngit push -u origin --tags\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"On the Git provider's webpage for your new central repository in the browser, you will find that the repository is now populated with all of zAppBuild's files and history, just like on IBM's public ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/IBM/dbb-zappbuild"},"zAppBuild")," repository."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The following screenshot shows an example of a populated central zAppBuild repository with GitLab as the Git provider:"),(0,r.kt)("p",{parentName:"li"},"  ",(0,r.kt)("img",{alt:"Example of a populated central zAppBuild repository in GitLab&#39;s web UI",src:i(5454).Z,width:"595",height:"357"})))))))),(0,r.kt)("h3",{id:"updating-your-customized-version-of-zappbuild"},"Updating your customized version of zAppBuild"),(0,r.kt)("p",null,"To updating your customized version of zAppBuild with latest official zAppBuild enhancementsintegrate the latest official zAppBuild features into your version of zAppBuild. So, let\u2019s get started."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Locate the internal Git repository and create a new Git branch. This is a good practice to validate the changes first. In this example, the new branch is called ",(0,r.kt)("inlineCode",{parentName:"p"},"update-zappbuild"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add a new Git remote definition to connect to IBM's official public zAppBuild GitHub repository. (Note: This step requires internet connectivity.)"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"First, list the remotes by issuing ",(0,r.kt)("inlineCode",{parentName:"p"},"git remote -v"),":"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"Output from initial listing of the remote tracked repositories",src:i(8371).Z,width:"743",height:"69"})),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"For more on Git remotes, see the ",(0,r.kt)("a",{parentName:"li",href:"https://git-scm.com/docs/git-remote"},"git-remote")," documentation."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add a new remote named ",(0,r.kt)("inlineCode",{parentName:"p"},"zappbuild-official")," to connect to GitHub by issuing the following command:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git remote add zappbuild-official https://github.com/IBM/dbb-zappbuild.git\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Verify that the new remote is available by issuing the command to list the remotes again: ",(0,r.kt)("inlineCode",{parentName:"p"},"git remote -v"),":"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"Output from listing the remote tracked repositories after adding the zappbuild-official remote",src:i(1026).Z,width:"743",height:"109"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Fetch the latest information from the official repository, by executing a Git fetch for the official dbb-zappubuild repository:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git fetch zappbuild-official\n")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"Output from Git fetch of the zappbuild-official remote",src:i(3216).Z,width:"743",height:"157"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make sure that your feature branch is checked out, before attempting to merge the changes from zappbuild-official. To merge the changes run into your branch ",(0,r.kt)("inlineCode",{parentName:"p"},"update-zappbuild"),", run the following command:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git merge zappbuild-official/main\n")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"Merge conflict when attempting to merge in changes from zappbuild-official",src:i(3650).Z,width:"743",height:"116"})),(0,r.kt)("p",{parentName:"li"},"Potentially, you face merge conflicts. In the above case, the merge processor could not automatically resolve the ",(0,r.kt)("inlineCode",{parentName:"p"},"utilities/ImpactUtilities.groovy"),"."),(0,r.kt)("p",{parentName:"li"},"Run the command ",(0,r.kt)("inlineCode",{parentName:"p"},"git status")," to see which files changed:"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"Output of Git status to view files changed during the merge attempt",src:i(9617).Z,width:"743",height:"376"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Open the unmerged files and resolve them manually. Either use the terminal, or an IDE for this task."),(0,r.kt)("admonition",{parentName:"li",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"The Git integration in many modern IDEs (for example, VS Code) is able to provide a side-by-side comparison highlighting the diff between your feature branch and the incoming changes from the merge attempt (in this case, from ",(0,r.kt)("inlineCode",{parentName:"p"},"zappbuild-official"),"). This can help make manual resolution of any merge conflicts much easier."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Commit the changes and verify them with a sample application before committing it (or opening a pull request to commit it) to your main branch that is used for all your production DBB builds."))))),(0,r.kt)("h2",{id:"artifact-repository"},"Artifact repository"),(0,r.kt)("p",null,"The artifact repository is often already in-place as part of the enterprise's distributed CI/CD pipeline."),(0,r.kt)("p",null,"Who needs to set up the artifact repository, and where?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Generally, the DevOps team (pipeline specialist) will work to set this up for z/OS application teams, as well.")),(0,r.kt)("h3",{id:"artifact-repository-options"},"Artifact repository options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Azure Artifacts"),(0,r.kt)("li",{parentName:"ul"},"JFrog Artifactory"),(0,r.kt)("li",{parentName:"ul"},"Sonatype Nexus"),(0,r.kt)("li",{parentName:"ul"},"UrbanCode Deploy (UCD) CodeStation")),(0,r.kt)("h2",{id:"deployment-manager"},"Deployment manager"),(0,r.kt)("p",null,"Who needs to install the deployment manager, and where?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Depending on the software selected, the deployment manager might require an agent on the z/OS side, which can be set up by a system programmer (infrastructure team). (Alternatively, the pipeline orchestrator could SSH into z/OS.)")),(0,r.kt)("h3",{id:"deployment-manager-options"},"Deployment manager options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"UrbanCode Deploy (UCD)"),(0,r.kt)("li",{parentName:"ul"},"Wazi Deploy")),(0,r.kt)("h2",{id:"pipeline-orchestrator"},"Pipeline orchestrator"),(0,r.kt)("p",null,"The artifact repository is often already in-place as part of the enterprise's distributed CI/CD pipeline."),(0,r.kt)("p",null,"Who needs to set up the pipeline orchestrator, and where?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Generally, the DevOps team (pipeline specialist) will work to set this up for z/OS application teams, as well."),(0,r.kt)("li",{parentName:"ul"},"The pipeline orchestrator often requires an agent or runner on the z/OS side, which can be set up by a system programmer (infrastructure team). (Alternatively, the pipeline orchestrator could SSH into z/OS.)")),(0,r.kt)("h3",{id:"pipeline-orchestrator-options"},"Pipeline orchestrator options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Azure Pipeline"),(0,r.kt)("li",{parentName:"ul"},"GitHub Actions"),(0,r.kt)("li",{parentName:"ul"},"GitLab CI"),(0,r.kt)("li",{parentName:"ul"},"Jenkins")),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("p",null,"This page contains reformatted excerpts from the following documents:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.ibm.com/support/pages/node/6457275"},"DBB zAppBuild Introduction and Custom Version Maintenance Strategy"))))}E.isMDXComponent=!0},9032:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/dbb-zappbuild-clone-output-dd67d26e3e6f20add7db3736bb859dfc.png"},8494:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/dbb-zappbuild-code-6943908b84da9077774d6291c4e58b5f.png"},3650:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/dbb-zappbuild-conflict-b92641811a4a6e362e8dab54a5967494.png"},3216:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/dbb-zappbuild-fetch-6aeba6d9649a7ca9b8ca94828596d8a8.png"},5454:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/dbb-zappbuild-pushed-84b6b7f5d863aab831b8652611969965.png"},8371:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/dbb-zappbuild-remote-v1-17d698411d66ddec511ea0d3e457cfa1.png"},1026:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/dbb-zappbuild-remote-v2-b3647619b8bedcb6950ca01425dc48e4.png"},9617:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/dbb-zappbuild-status-04f91addd544234c7354674285ce3ee9.png"}}]);